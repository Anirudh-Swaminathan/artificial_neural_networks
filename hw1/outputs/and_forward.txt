Building an AND gate using neural networks
There is no training involved, just the final weights that give the correct output
Using binary function as the activation function
i1 | i2 | b  | Net | Output
1  | 1  | 1  | 1  | 1
Weights used are: 
2 2 -3
i1 | i2 | b  | Net | Output
1  | 0  | 1  | -1  | -1
Weights used are: 
2 2 -3
i1 | i2 | b  | Net | Output
0  | 1  | 1  | -1  | -1
Weights used are: 
2 2 -3
i1 | i2 | b  | Net | Output
0  | 0  | 1  | -3  | -1
Weights used are: 
2 2 -3
